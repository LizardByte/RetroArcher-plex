name: Create Package

on:
  pull_request:
    branches: [master, nightly]
    types: [opened, synchronize, edited, reopened]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  check_changelog:
    name: Check Changelog
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Verify Changelog
      id: verify_changelog
      if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
      # base_ref for pull request check, ref for push
      uses: RetroArcher/actions/verify_changelog@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      next_version: ${{ steps.verify_changelog.outputs.changelog_parser_version }}
      last_version: ${{ steps.verify_changelog.outputs.latest_release_tag_name }}
      release_body:  ${{ steps.verify_changelog.outputs.changelog_parser_description }}

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-10.15]

    runs-on: ${{ matrix.os }}
    needs: check_changelog

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python 2.7
        uses: actions/setup-python@v2  # https://github.com/actions/setup-python
        with:
          python-version: '2.7'

      - name: Set up Python 2.7 Dependencies
        env:
          TARGET_DIR: ./Contents/Libraries/Shared
        run: |
          echo "Installing Plex Agent Requirements"
          python --version
          python -m pip --no-python-version-warning --disable-pip-version-check install --upgrade pip==20.3.4 setuptools
          pip install --target=${{ env.TARGET_DIR }} -r ${{ env.TARGET_DIR }}/requirements.txt  --no-warn-script-location --ignore-requires-python

      - name: Test Plex Agent
        run: |
          python --version
          python ./Contents/Code/__init__.py

      - name: Install Python 3.9
        uses: actions/setup-python@v2  # https://github.com/actions/setup-python
        with:
          python-version: '3.9'

      - name: Set up Python 3.9 Dependencies
        env:
          TARGET_DIR: ./Contents/Libraries/Modules
        run: |
          echo "Installing RetroArcher Requirements"
          python --version
          python -m pip install --upgrade pip
          pip install --target=${{ env.TARGET_DIR }} -r ${{ env.TARGET_DIR }}/requirements.txt --no-warn-script-location

      - name: Test RetroArcher
        run: |
          python --version
          python ./Contents/Code/retroarcher/retroarcher.py

      - name: Setup Artifact Path
        shell: pwsh
        run: |
          cd ..
          Get-ChildItem RetroArcher.bundle/* | Rename-Item -NewName { $_.Name -replace 'RetroArcher.bundle','RetroArcher.bundle/RetroArcher.bundle' }

      - name: Upload Artifacts
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v2  # https://github.com/actions/upload-artifact
        with:
          name: RetroArcher.bundle-${{ runner.os }}
          if-no-files-found: error  # 'warn' or 'ignore' are also available, defaults to `warn`
          path: |
            /RetroArcher.bundle/
            !*.git*

      - name: Package Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          7z "-xr!*.git*" "-xr!*.pyc" "-xr!__pycache__" a "./RetroArcher.bundle-${{ runner.os }}.zip" "RetroArcher.bundle"

      - name: Create/Update GitHub Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: ncipollo/release-action@v1  # https://github.com/ncipollo/release-action
        with:
          name: ${{ needs.check_changelog.outputs.next_version }}
          tag: ${{ needs.check_changelog.outputs.next_version }}
          artifacts: "*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdated: true
          body: ${{ needs.check_changelog.outputs.release_body }}
